[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "peakrdl-pybind11"
version = "0.1.0"
description = "Export SystemRDL to PyBind11 modules for Python-based hardware testing"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "GPL-3.0-only" }
keywords = ["SystemRDL", "PyBind11", "register", "hardware", "testing"]
authors = [{ name = "Arnav Sacheti" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
]
dependencies = ["systemrdl-compiler >= 1.30.1", "jinja2"]

[project.optional-dependencies]
cli = ["peakrdl-cli >= 1.2.3"]

[dependency-groups]
docs = [
    "sphinx >= 7.0",
    "sphinx-book-theme >= 1.0",
    "sphinx-autodoc-typehints >= 2.0",
]
benchmark = ["pytest >= 7.4.4", "pytest-benchmark >= 5.1.0"]
test = ["pytest >= 7.4.4", "pytest-cov >= 4.1.0"]
build-bench = ["pytest >= 7.4.4", "pytest-benchmark >= 5.1.0", "build >= 1.0.0"]
tools = ["pyrefly >= 0.37.0", "ruff >= 0.14.0"]

[project.urls]
Homepage = "https://github.com/arnavsacheti/PeakRDL-pybind11"
Repository = "https://github.com/arnavsacheti/PeakRDL-pybind11"
Issues = "https://github.com/arnavsacheti/PeakRDL-pybind11/issues"

[project.entry-points."peakrdl.exporters"]
pybind11 = "peakrdl_pybind11.__peakrdl__:Exporter"

[tool.setuptools.package-data]
peakrdl_pybind11 = ["templates/*.jinja"]

[tool.ruff]
line-length = 110
target-version = "py310"
extend-exclude = ["CVS", "parser", "docs", "tests", "benchmarks"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "B",   # bugbear
    "UP",  # pyupgrade
    "RUF", # ruff-specific
    "ANN", # flake8-annotations (require type annotations)
]
ignore = [
    "F841",  # unused-variable
    "UP032", # consider-using-f-string
    "E501",  # line-too-long
]

# Make tests less strict for annotations.
# [tool.ruff.lint.per-file-ignores]
# "tests/**/*" = ["ANN*"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyrefly]
project_includes = ["src/**"]

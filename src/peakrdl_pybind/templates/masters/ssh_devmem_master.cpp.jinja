#include <stdexcept>
#include <string>

#include "master.hpp"

namespace {{ namespace }} {

class SSHDevmemMaster : public Master {
public:
  SSHDevmemMaster(std::string host, std::string user);

  uint32_t read32(uint64_t addr) override;
  void write32(uint64_t addr, uint32_t data, uint32_t wstrb = 0xF) override;

private:
  std::string host_;
  std::string user_;
};

SSHDevmemMaster::SSHDevmemMaster(std::string host, std::string user) : host_(std::move(host)), user_(std::move(user)) {}

uint32_t SSHDevmemMaster::read32(uint64_t addr) {
  (void)addr;
  throw std::runtime_error("SSH devmem master example is not implemented");
}

void SSHDevmemMaster::write32(uint64_t addr, uint32_t data, uint32_t wstrb) {
  (void)addr;
  (void)data;
  (void)wstrb;
  throw std::runtime_error("SSH devmem master example is not implemented");
}

} // namespace {{ namespace }}
